spring:
#定义环境引用的配置文件
  profiles:
    active: dev
  application: SuperBootWeb
#使用@Aspect注解将一个java类定义为切面类
#使用@Pointcut定义一个切入点，可以是一个规则表达式，比如下例中某个package下的所有函数，也可以是一个注解等。
#根据需要在切入点不同位置的切入内容
#使用@Before在切入点开始处切入内容
#使用@After在切入点结尾处切入内容
#使用@AfterReturning在切入点return内容之后切入内容（可以用来对处理返回值做一些加工处理）
#使用@Around在切入点前后切入内容，并自己控制何时执行切入点自身的内容
#使用@AfterThrowing用来处理当切入内容部分抛出异常之后的处理逻辑
#使用CGLIB来实现AOP，false是标准Java的实现
  aop:
    proxy-target-class: true
  http:
    encoding:
      force: true
      charset: UTF-8
    multipart:
      enabled: true
      max-file-size: 1024MB
  #热加载配置
  devtools:
    remote:
      secret: thisismysecret
  ##beetl.templatesPath=/WEB-INF/templates
  beetl:
    root: /WEB-INF/templates/
    prefix:
    suffix: .html
    order: 0
    cofig: classpath:beetl.properties

#JWT配置信息
jwt:
  header: Authorization
  secret: DSDXt7zooL3cYsDjt794p
  expiration: 604800
  tokenHead: Bearer
#Twitter_Snowflake 序列号生成器配置
Snowflake:
  #工作中心ID 0-31
  workerId: 0
  #数据中心ID(0~31)
  datacenterId: 0

#Swagger配置
swagger:
  #是否启用swagger，默认：true
  enabled: true
  #标题
  title: 前台WEB端文档
  #描述
  description: 官网：http://www.superboot.org/
  #版本
  version: 1.0
  #许可证
  license: Apache License, Version 2.0
  #许可证URL
  licenseUrl: https://www.apache.org/licenses/LICENSE-2.0.html
  #服务条款URL
  termsOfServiceUrl: http://www.superboot.org/
  #swagger扫描的基础包，默认：全扫描
  base-package: org.superboot.controller
  #需要处理的基础URL规则，默认：/**
  base-path: /**
  #需要排除的URL规则，默认：空
  exclude-path: /error ,/view/**
  #文档的host信息，默认：空
  host:
  contact:
    #维护人
    name: Jesion
    #维护人URL
    url: http://www.superboot.org/
    #维护人email
    email: 7040210@qq.com
  #自定义参数信息
  globalOperationParameters[0]:
    #参数名
    name: Authorization
    #描述信息
    description: TOKEN
    #指定参数类型
    modelRef: string
    #指定参数存放位置,可选header,query,path,body.form
    parameterType: header
    #指定参数是否必传，true,false
    required: false